name: "NuvlaEdge Component Build"

on:
  push:
    branches:
      - 'main'
    tags-ignore:
      - '*.*.*'
  pull_request:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Run unit tests
        run: |
          pip install -r code/requirements.tests.txt
          pytest code/tests --junitxml=test-report.xml -v

      # Use QeMu for multi-architecture build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Keep list of dependencies as an artifact
        uses: actions/upload-artifact@v2
        if: ${{ success() }}
        with:
          name: dependencies
          path: |
            dependencies-tree.png
            dependencies-licenses.txt

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm/v8,linux/arm64
          build-args: |
            GIT_BRANCH=${GITHUB_REF##*/}
            GIT_BUILD_TIME=$(date --utc +%FT%T.%3NZ)
            GIT_COMMIT_ID=${{ github.sha }}
            GITHUB_RUN_NUMBER=${{ github.run_number }}
            GITHUB_RUN_ID=${{ github.run_id }}
            PROJECT_URL=${{ github.server_url }}/${{ github.repository }}

          tags: nuvladev/agent:${GITHUB_REF##*/}
          push: true

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-report.xml

  notify:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK_URL}}
          # Optional Input
          icon_emoji: ':ghost:'
