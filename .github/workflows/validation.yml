name: "Validation"

on:
  workflow_run:
    workflows: [BUILD]
    types:
      - completed
  workflow_dispatch:

env:
  VALIDATION_PACKAGE_NAME: ${{ vars.VALIDATION_PACKAGE_NAME }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name || vars.GITHUB_REF_NAME }}

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      boards: ${{ steps.set-boards.outputs.boards }}
      tests: ${{ steps.set-tests.outputs.tests }}
    steps:
      - id: set-boards
        run: |
          echo "boards=${{ vars.TESTBED_BOARDS }}" >> $GITHUB_OUTPUT

      - id: set-tests
        run: |
          echo "tests=${{ vars.VALIDATION_TESTS }}" >> $GITHUB_OUTPUT

  validate-release:
    needs: setup-matrix
    strategy:
      matrix:
        board-config: ${{ fromJSON(needs.setup-matrix.outputs.boards) }}
        validation-type: ${{ fromJSON(needs.setup-matrix.outputs.tests) }}
    runs-on: ${{ matrix.board-config }}

    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: CheckOut validation packages
        run: |
          curl -u "${{ secrets.VALIDATION_TOKEN_USERNAME }}:${{ secrets.VALIDATION_TOKEN_SECRET }}" \
          -H 'Accept: application/vnd.github.v3.raw' \
          -O --create-dirs --output-dir conf/targets/ \
          -L "https://api.github.com/repos/nuvlaedge/validation/contents/conf/targets/${{ matrix.board-config }}.toml" \

      - name: Gather System configuration
        run: |
          curl -u "${{ secrets.VALIDATION_TOKEN_USERNAME }}:${{ secrets.VALIDATION_TOKEN_SECRET }}" \
          -H 'Accept: application/vnd.github.v3.raw' \
          -O -L "https://api.github.com/repos/nuvlaedge/validation/contents/${{ env.VALIDATION_PACKAGE_NAME }}"

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.8'

      - name: Install Validation Framework dependency
        run: pip install ${{ env.VALIDATION_PACKAGE_NAME }}  --force-reinstall

      - name: Setup results folder
        run: |
          mkdir -p results/temp/xml results/temp/json

      - name: Clear previous results
        run: |
          rm results/temp/xml/*.xml || true

      - name: Run Validation on board ${{ matrix.board-config }}
        run: |
          python -m validation_framework --target ${{ matrix.board-config }}.toml \
          --validator ${{ matrix.validation-type }} --repository ${{ github.event.repository.name }} \
          --branch ${{ env.BRANCH_NAME }} 

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          check_name: "| ${{ matrix.board-config }} --- ${{ matrix.validation-type }} |"
          junit_files: "results/temp/xml/*.xml"